server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由
      routes:
        - id: payment_route # 路由的id,没有规定规则但要求唯一,建议配合服务名
          #匹配后提供服务的路由地址
#          uri: http://localhost:8001
          uri: lb://CLOUD-PROVIDER-PAYMENT #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/getPaymentById # 断言，路径相匹配的进行路由

        - id: payment_route2
#          uri: http://localhost:8001
          uri: lb://CLOUD-PROVIDER-PAYMENT #匹配后提供服务的路由地址
#          filters:
#            - AddRequestParameter=X-Request-Id,1024 #过滤工厂会在匹配的请求头上加一对请求头，名称为X-Request-Id值为1024
          predicates:
            - Path=/payment/lb #断言,路径相匹配的进行路由
#            - After=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
#            - Before=2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
#            - Between=2020-03-08T10:59:34.102+08:00[Asia/Shanghai] ,  2020-03-08T10:59:34.102+08:00[Asia/Shanghai]
#            - Cookie=username,zhangshuai #并且Cookie是username=zhangshuai才能访问
#            - Header=X-Request-Id, \d+   #请求头中要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.atguigu.com
#            - Method=GET,POST
#            - Query=username, \d+ #要有参数名称并且是正整数才能路由





# Eureka配置
eureka:
  client:
    #是否将自己注册进入eurekaserver,默认值为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认值为true;
    #单节点的情况下无所谓，集群必须设置为true，才能配置ribbon实现负载均衡
    fetchRegistry: true
    service-url:
      #单机版
      #      defaultZone: http://localhost:7001/eureka
      #集群版
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka

  # 主机名称：服务名称修改 防止eureka界面显示主机名称
  instance:
    #eureka界面显示服务名
    hostname: cloud-gateway-service
    #是否显示访问的IP地址
    prefer-ip-address: true
    #eureka客户端像服务端发送心跳的时间间隔 单位是秒（默认值为30秒）
    lease-renewal-interval-in-seconds: 1
    #eureka服务端收到最后一次心跳等待时间上限，单位是秒（默认值为90秒） 超时将剔除服务
    lease-expiration-duration-in-seconds: 2
